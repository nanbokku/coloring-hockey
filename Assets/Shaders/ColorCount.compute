// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CountColor

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWStructuredBuffer<int> _Result;
Texture2D<float4> _Source;
float4 _Color1;
float4 _Color2;

bool equals(float4 a, float4 b)
{
   float diff = length(a - b);
   return diff < 0.01;  // 厳密すぎると判定が難しいので
}

[numthreads(8,8,1)]
void CountColor (uint2 id : SV_DispatchThreadID)
{
   float4 color = _Source[id];

   // 色毎にカウントする
   if (equals(color, _Color1)) {
       InterlockedAdd(_Result[1], 1);
   } else if (equals(color, _Color2)) {
       InterlockedAdd(_Result[2], 1);
   }
}